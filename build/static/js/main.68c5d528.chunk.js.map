{"version":3,"sources":["images/plus-icon.svg","images/copy-icon.svg","images/trash-icon.svg","images/menu-icon.svg","js/components/ProcessMenu.jsx","js/components/ProcessMenuBar.jsx","js/components/KensanHeader.jsx","js/KensanConst.js","js/components/MenuItem.jsx","js/components/SetWorkSpaceMenu.jsx","js/components/Item.jsx","js/components/Set.jsx","js/components/SetWorkSpace.jsx","js/components/ItemWorkSpaceMenu.jsx","js/components/ItemWorkSpace.jsx","js/components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","ProcessMenu","className","ProcessMenuBar","KensanHeader","src","menuIcon","alt","KensanConst","ItemType","Item","InnerItem","Set","SET_HEADER_HEIGHT","MenuItem","iconSrc","onClick","type","SetWorkSpaceMenu","props","state","position","top","left","menus","plusIcon","copyIcon","trashIcon","style","this","map","menu","Component","itemInfo","innerItemInfo","useDrag","item","info","collect","monitor","isDragging","drag","extraStyle","opacity","y","x","newStyle","Object","assign","ref","name","defaultProps","innerItemId","setId","setInfo","onDrop","items","useDrop","accept","drop","droppedPosition","getSourceClientOffset","set_id","item_id","isOver","backgroundColor","color","containedItems","containedItem","index","find","element","itemId","SetWorkSpace","sets","onTrash","console","log","set","ItemWorkSpaceMenu","ItemWorkSpace","App","border","droppedSet","droppedItemInfo","push","targetSet","newInnerItems","filter","backend","HTML5Backend","handleItemDrop","handleItemTrash","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68c5d528.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus-icon.ab0afe9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/copy-icon.58bed3d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash-icon.2b32eb47.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu-icon.2f39056e.svg\";","import React from 'react';\n\nconst ProcessMenu = () => (\n    <div className=\"processMenu\">\n        <ul className=\"processMenu__list\">\n            <li className=\"processMenu__item\">\n                <button className=\"processMenu__button\">セット作成</button>\n            </li>\n            <li className=\"processMenu__item\">\n                <button className=\"processMenu__button\">セット配置</button>\n            </li>\n        </ul>\n    </div> \n);\n\nexport default ProcessMenu;","import React from \"react\";\n\nconst ProcessMenuBar = () => (\n\t<ul className=\"processMenuBar\">\n\t\t<li className=\"processMenuBar__item processMenuBar__item--active\"></li>\n\t\t<li className=\"processMenuBar__item\"></li>\n\t</ul>\n);\n\nexport default ProcessMenuBar;\n","import React from 'react';\nimport menuIcon from '../../images/menu-icon.svg';\n\nimport ProcessMenu from './ProcessMenu';\nimport ProcessMenuBar from './ProcessMenuBar';\n\nconst KensanHeader = () => (\n    <header className=\"kensanHeader\">\n        <div className=\"kensanHeader__buttonArea\">\n            <div className=\"menuButtonContainer\">\n                <button className=\"menuButton\">\n                    <img src={menuIcon} alt=\"menu\" className=\"menuButton__image\"/>\n                </button>\n            </div>\n            <ProcessMenu />\n        </div>\n        <ProcessMenuBar />\n    </header>\n);\n\nexport default KensanHeader;","const KensanConst = {\n\tItemType: {\n\t\tItem: \"item\",\n\t\tInnerItem: \"InnerItem\",\n\t\tSet: \"set\"\n\t},\n\tSET_HEADER_HEIGHT: 40\n};\n\nexport default KensanConst;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst MenuItem = ({ iconSrc, alt, onClick }) => (\n\t<li className=\"menuItem\">\n\t\t<button type=\"button\" className=\"menuItem__button\" onClick={onClick}>\n\t\t\t<img src={iconSrc} alt={alt} className=\"worSpaceMenu__icon\" />\n\t\t</button>\n\t</li>\n);\n\nMenuItem.propTypes = {\n\ticonSrc: PropTypes.string,\n\talt: PropTypes.string,\n\tonCLick: PropTypes.func\n};\n\nexport default MenuItem;\n","import React, { Component } from \"react\";\n\nimport plusIcon from \"../../images/plus-icon.svg\";\nimport copyIcon from \"../../images/copy-icon.svg\";\nimport trashIcon from \"../../images/trash-icon.svg\";\n\nimport MenuItem from \"./MenuItem\";\n\nclass SetWorkSpaceMenu extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tposition: {\n\t\t\t\ttop: 15,\n\t\t\t\tleft: 15\n\t\t\t}\n\t\t};\n\t\tthis.menus = [\n\t\t\t{\n\t\t\t\ticonSrc: plusIcon,\n\t\t\t\talt: \"追加\",\n\t\t\t\tonClick: () => {}\n\t\t\t},\n\t\t\t{\n\t\t\t\ticonSrc: copyIcon,\n\t\t\t\talt: \"複製\",\n\t\t\t\tonClick: () => {}\n\t\t\t},\n\t\t\t{\n\t\t\t\ticonSrc: trashIcon,\n\t\t\t\talt: \"削除\",\n\t\t\t\tonClick: () => {}\n\t\t\t}\n\t\t];\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<ul className=\"setWorkSpaceMenu\" style={this.state.position}>\n\t\t\t\t{this.menus.map(menu => (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\talt={menu.alt}\n\t\t\t\t\t\ticonSrc={menu.iconSrc}\n\t\t\t\t\t\tonClick={menu.onClick}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nexport default SetWorkSpaceMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDrag } from \"react-dnd\";\n\nimport KensanConst from \"../KensanConst\";\n\nconst Item = ({ itemInfo, position, type, innerItemInfo }) => {\n\tconst [{ isDragging }, drag] = useDrag({\n\t\titem: {\n\t\t\ttype,\n\t\t\tinfo: itemInfo,\n\t\t\tinnerItemInfo\n\t\t},\n\t\tcollect: monitor => ({\n\t\t\tisDragging: !!monitor.isDragging(),\n\t\t})\n\t});\n\n\tconst extraStyle = {\n\t\topacity: isDragging ? 0.5 : 1,\n\t\ttop: position.y,\n\t\tleft: position.x\n\t};\n\tconst newStyle = Object.assign(extraStyle, itemInfo.style);\n\n\treturn (\n\t\t<section className=\"item\" style={newStyle} ref={drag}>\n\t\t\t<h2 className=\"item__name\">{itemInfo.name}</h2>\n\t\t</section>\n\t);\n};\n\nItem.propTypes = {\n\titemInfo: PropTypes.shape({\n\t\tname: PropTypes.string\n\t})\n};\n\nItem.defaultProps = {\n\tinnerItemInfo: {\n\t\tinnerItemId: -1,\n\t\tsetId: -1\n\t}\n};\n\nexport default Item;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDrop, useDrag } from \"react-dnd\";\n\nimport KensanConst from \"../KensanConst\";\nimport Item from \"./Item\";\n\nconst Set = ({ setInfo, onDrop, items, position }) => {\n\tconst [{ isOver }, drop] = useDrop({\n\t\taccept: KensanConst.ItemType.Item,\n\t\tdrop: (item, monitor) => {\n\t\t\tconst droppedPosition = monitor.getSourceClientOffset();\n\t\t\tonDrop(setInfo.set_id, item.info.item_id, droppedPosition);\n\t\t},\n\t\tcollect: monitor => ({\n\t\t\tisOver: !!monitor.isOver()\n\t\t})\n\t});\n\n\tconst [{ isDragging }, drag] = useDrag({\n\t\titem: { type: KensanConst.ItemType.Set, info: setInfo },\n\t\tcollect: monitor => ({\n\t\t\tisDragging: !!monitor.isDragging()\n\t\t})\n\t});\n\n\t// props, constructorから割り出される値を元に追加のスタイルを定義\n\tconst extraStyle = {\n\t\tbackgroundColor: isOver ? \"#FFEFFB\" : \"white\",\n\t\ttop: position.y,\n\t\tleft: position.x,\n\t\topacity: isDragging ? 0.5 : 1\n\t};\n\n\tconst newStyle = Object.assign(extraStyle, setInfo.style);\n\n\treturn (\n\t\t<section className=\"set\" style={newStyle} ref={drop}>\n\t\t\t<h2 className=\"set__name\" style={{ backgroundColor: setInfo.color }}>\n\t\t\t\t{setInfo.name}\n\t\t\t</h2>\n\t\t\t<ul className=\"set__itemList\">\n\t\t\t\t{setInfo.containedItems.map((containedItem, index) => (\n\t\t\t\t\t<Item\n\t\t\t\t\t\tinnerItemInfo={{\n\t\t\t\t\t\t\tinnerItemId: index,\n\t\t\t\t\t\t\tsetId: setInfo.set_id\n\t\t\t\t\t\t}}\n\t\t\t\t\t\titemInfo={items.find(\n\t\t\t\t\t\t\telement => element.item_id === containedItem.itemId\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tposition={containedItem.position}\n\t\t\t\t\t\ttype={KensanConst.ItemType.InnerItem}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</section>\n\t);\n};\n\nSet.propTypes = {\n\tsetInfo: PropTypes.shape({\n\t\tname: PropTypes.string\n\t})\n};\n\nexport default Set;\n","import React, { Component } from \"react\";\nimport { useDrop } from 'react-dnd';\n\nimport KensanConst from \"../KensanConst\";\nimport SetWorkSpaceMenu from \"./SetWorkSpaceMenu\";\nimport Set from \"./Set\";\n\nconst SetWorkSpace = ({ sets, onDrop, items, onTrash }) => {\n\tconst [{ isOver }, drop] = useDrop({\n\t\taccept: KensanConst.ItemType.InnerItem,\n\t\tdrop: item => {\n\t\t\tconsole.log(item);\n\t\t\tonTrash(item.innerItemInfo.setId, item.innerItemInfo.innerItemId);\n\t\t},\n\t\tcollect: monitor => ({\n\t\t\tisOver: !!monitor.isOver()\n\t\t})\n\t});\n\tconst style = {\n\t\tbackgroundColor: isOver ? \"#FFEFFB\" : \"white\"\n\t};\n\n\treturn (\n\t\t<div className=\"setWorkSpace\" style={style} ref={drop}>\n\t\t\t<SetWorkSpaceMenu />\n\t\t\t{sets.map(set => (\n\t\t\t\t<Set\n\t\t\t\t\tsetInfo={set}\n\t\t\t\t\tonDrop={onDrop}\n\t\t\t\t\titems={items}\n\t\t\t\t\tposition={set.position}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default SetWorkSpace;\n","import React, { Component } from \"react\";\n\nimport plusIcon from \"../../images/plus-icon.svg\";\nimport copyIcon from \"../../images/copy-icon.svg\";\nimport trashIcon from \"../../images/trash-icon.svg\";\n\nimport MenuItem from \"./MenuItem\";\n\nclass ItemWorkSpaceMenu extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t\tthis.menus = [\n\t\t\t{\n\t\t\t\ticonSrc: plusIcon,\n\t\t\t\talt: \"追加\",\n\t\t\t\tonClick: () => {}\n\t\t\t},\n\t\t\t{\n\t\t\t\ticonSrc: copyIcon,\n\t\t\t\talt: \"複製\",\n\t\t\t\tonClick: () => {}\n\t\t\t},\n\t\t\t{\n\t\t\t\ticonSrc: trashIcon,\n\t\t\t\talt: \"削除\",\n\t\t\t\tonClick: () => {}\n\t\t\t}\n\t\t];\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<ul className=\"itemWorkSpaceMenu\" style={this.state.position}>\n\t\t\t\t{this.menus.map(menu => (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\talt={menu.alt}\n\t\t\t\t\t\ticonSrc={menu.iconSrc}\n\t\t\t\t\t\tonClick={menu.onClick}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nexport default ItemWorkSpaceMenu;\n","import React, { Component } from \"react\";\n\nimport ItemWorkSpaceMenu from \"./ItemWorkSpaceMenu\";\nimport Item from \"./Item\";\n\nimport KensanConst from '../KensanConst';\n\nclass ItemWorkSpace extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\tconst { items } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"itemWorkSpace\">\n\t\t\t\t<ItemWorkSpaceMenu />\n\t\t\t\t<div className=\"itemContainer\">\n\t\t\t\t\t{items.map(item => (\n\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\titemInfo={item}\n\t\t\t\t\t\t\tposition={item.position}\n\t\t\t\t\t\t\ttype={KensanConst.ItemType.Item}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ItemWorkSpace;\n","import React, { Component } from \"react\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\n\nimport KensanHeader from \"./KensanHeader\";\nimport SetWorkSpace from \"./SetWorkSpace\";\nimport ItemWorkSpace from \"./ItemWorkSpace\";\nimport KensanConst from '../KensanConst';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tsets: [\n\t\t\t\t{\n\t\t\t\t\tset_id: 1,\n\t\t\t\t\tname: \"セットA\",\n\t\t\t\t\tcolor: \"#F271D8\",\n\t\t\t\t\tposition: {\n\t\t\t\t\t\tx: 50,\n\t\t\t\t\t\ty: 80\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tborder: \"3px solid #F271D8\"\n\t\t\t\t\t},\n\t\t\t\t\tcontainedItems: []\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tset_id: 10,\n\t\t\t\t\tname: \"セットB\",\n\t\t\t\t\tcolor: \"#4DC4F1\",\n\t\t\t\t\tposition: {\n\t\t\t\t\t\tx: 350,\n\t\t\t\t\t\ty: 80\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tborder: \"3px solid #4DC4F1\"\n\t\t\t\t\t},\n\t\t\t\t\tcontainedItems: []\n\t\t\t\t}\n\t\t\t],\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\titem_id: 1,\n\t\t\t\t\tname: \"アイテム１\",\n\t\t\t\t\tcolor: \"#F271D8\",\n\t\t\t\t\tposition: {\n\t\t\t\t\t\tx: 20,\n\t\t\t\t\t\ty: 20\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tbackgroundColor: \"#F271D8\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\titem_id: 10,\n\t\t\t\t\tname: \"アイテム２\",\n\t\t\t\t\tcolor: \"#4DC4F1\",\n\t\t\t\t\tposition: {\n\t\t\t\t\t\tx: 200,\n\t\t\t\t\t\ty: 20\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tbackgroundColor: \"#4DC4F1\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n\t// ドロップされたアイテムをセットに追加\n\thandleItemDrop(setId, itemId, droppedPosition) {\n\t\tconst { sets } = this.state;\n\t\tconst droppedSet = sets.find(element => element.set_id === setId);\n\n\t\t// position: relativeで表示する座標に変換する\n\t\tconst relativePosition = {\n\t\t\tx: droppedPosition.x - droppedSet.position.x,\n\t\t\ty:\n\t\t\t\tdroppedPosition.y -\n\t\t\t\tdroppedSet.position.y -\n\t\t\t\tKensanConst.SET_HEADER_HEIGHT\n\t\t};\n\n\t\t// セット内の座標とitemIdをセットで追加する\n\t\tconst droppedItemInfo = {\n\t\t\titemId,\n\t\t\tposition: relativePosition\n\t\t};\n\t\tdroppedSet.containedItems.push(droppedItemInfo);\n\t}\n\n\t// セット内アイテムを外にドロップしたときの処理\n\thandleItemTrash(setId, innerItemId) {\n\t\tconst { sets } = this.state;\n\n\t\tconst targetSet = sets.find(element => element.set_id === setId);\n\t\tconst newInnerItems = targetSet.containedItems.filter(\n\t\t\t(element, index) => index !== innerItemId\n\t\t);\n\t\ttargetSet.containedItems = newInnerItems;\n\t}\n\n\trender() {\n\t\tconst { sets, items } = this.state;\n\n\t\treturn (\n\t\t\t<DndProvider backend={HTML5Backend}>\n\t\t\t\t<div className=\"kensanApp\">\n\t\t\t\t\t<KensanHeader />\n\t\t\t\t\t<SetWorkSpace\n\t\t\t\t\t\tsets={sets}\n\t\t\t\t\t\titems={items}\n\t\t\t\t\t\tonDrop={(setId, itemId, droppedPosition) => {\n\t\t\t\t\t\t\tthis.handleItemDrop(setId, itemId, droppedPosition);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonTrash={(setId, innerItemId) => {\n\t\t\t\t\t\t\tthis.handleItemTrash(setId, innerItemId);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<ItemWorkSpace items={items} />\n\t\t\t\t</div>\n\t\t\t</DndProvider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './js/components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}