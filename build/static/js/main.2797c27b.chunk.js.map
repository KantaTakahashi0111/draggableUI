{"version":3,"sources":["images/plus-icon.svg","images/copy-icon.svg","images/trash-icon.svg","images/menu-icon.svg","js/components/ProcessMenu.jsx","js/components/ProcessMenuBar.jsx","js/components/KensanHeader.jsx","js/KensanConst.js","js/components/MenuItem.jsx","js/components/SetWorkSpaceMenu.jsx","js/components/Item.jsx","js/components/Set.jsx","js/components/SetWorkSpace.jsx","js/components/ItemWorkSpaceMenu.jsx","js/components/ItemWorkSpace.jsx","js/components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","ProcessMenu","className","ProcessMenuBar","KensanHeader","src","menuIcon","alt","KensanConst","ItemType","Item","InnerItem","Set","APP_HEADER_HEIGHT","SET_HEADER_HEIGHT","ITEM_GRID_X","SET_GRID_X","MenuItem","iconSrc","onClick","type","SetWorkSpaceMenu","props","state","position","top","left","menus","plusIcon","copyIcon","trashIcon","style","this","map","menu","key","Component","itemInfo","innerItemInfo","useDrag","item","info","collect","monitor","isDragging","drag","extraStyle","opacity","y","x","newStyle","Object","assign","ref","name","defaultProps","innerItemId","setId","setInfo","onDrop","items","onInnerMove","onTransfer","useDrop","accept","drop","droppedPosition","getSourceClientOffset","set_id","item_id","isOver","backgroundColor","color","containedItems","containedItem","index","find","element","itemId","SetWorkSpace","sets","onTrash","onSetMove","didDrop","shallow","set","ItemWorkSpaceMenu","ItemWorkSpace","App","a","border","getSetbyId","absolutePosition","console","log","targetSet","newInnerItems","filter","forceUpdate","droppedSet","droppedItemInfo","getRelativePosition","push","getRelativeSetPosition","addItemToSet","_element","removeItemFromSet","toSetId","transferedItemId","getContainedItemId","backend","HTML5Backend","handleItemDrop","handleItemTrash","handleInnerMove","handleItemTransfer","handleSetMove","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2797c27b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus-icon.ab0afe9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/copy-icon.58bed3d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash-icon.2b32eb47.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu-icon.2f39056e.svg\";","import React from 'react';\n\nconst ProcessMenu = () => (\n    <div className=\"processMenu\">\n        <ul className=\"processMenu__list\">\n            <li className=\"processMenu__item\">\n                <button className=\"processMenu__button\">セット作成</button>\n            </li>\n            <li className=\"processMenu__item\">\n                <button className=\"processMenu__button\">セット配置</button>\n            </li>\n        </ul>\n    </div> \n);\n\nexport default ProcessMenu;","import React from \"react\";\n\nconst ProcessMenuBar = () => (\n\t<ul className=\"processMenuBar\">\n\t\t<li className=\"processMenuBar__item processMenuBar__item--active\"></li>\n\t\t<li className=\"processMenuBar__item\"></li>\n\t</ul>\n);\n\nexport default ProcessMenuBar;\n","import React from 'react';\nimport menuIcon from '../../images/menu-icon.svg';\n\nimport ProcessMenu from './ProcessMenu';\nimport ProcessMenuBar from './ProcessMenuBar';\n\nconst KensanHeader = () => (\n    <header className=\"kensanHeader\">\n        <div className=\"kensanHeader__buttonArea\">\n            <div className=\"menuButtonContainer\">\n                <button className=\"menuButton\">\n                    <img src={menuIcon} alt=\"menu\" className=\"menuButton__image\"/>\n                </button>\n            </div>\n            <ProcessMenu />\n        </div>\n        <ProcessMenuBar />\n    </header>\n);\n\nexport default KensanHeader;","const KensanConst = {\n\tItemType: {\n\t\tItem: \"item\",\n\t\tInnerItem: \"InnerItem\",\n\t\tSet: \"set\"\n\t},\n\tAPP_HEADER_HEIGHT: 40,\n\tSET_HEADER_HEIGHT: 40,\n\tITEM_GRID_X: 200,\n\tSET_GRID_X: 300\n};\n\nexport default KensanConst;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst MenuItem = ({ iconSrc, alt, onClick }) => (\n\t<li className=\"menuItem\">\n\t\t<button type=\"button\" className=\"menuItem__button\" onClick={onClick}>\n\t\t\t<img src={iconSrc} alt={alt} className=\"worSpaceMenu__icon\" />\n\t\t</button>\n\t</li>\n);\n\nMenuItem.propTypes = {\n\ticonSrc: PropTypes.string,\n\talt: PropTypes.string,\n\tonCLick: PropTypes.func\n};\n\nexport default MenuItem;\n","import React, { Component } from \"react\";\n\nimport plusIcon from \"../../images/plus-icon.svg\";\nimport copyIcon from \"../../images/copy-icon.svg\";\nimport trashIcon from \"../../images/trash-icon.svg\";\n\nimport MenuItem from \"./MenuItem\";\n\nclass SetWorkSpaceMenu extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tposition: {\n\t\t\t\ttop: 15,\n\t\t\t\tleft: 15\n\t\t\t}\n\t\t};\n\t\tthis.menus = [\n\t\t\t{\n\t\t\t\ticonSrc: plusIcon,\n\t\t\t\talt: \"追加\",\n\t\t\t\tonClick: () => {}\n\t\t\t},\n\t\t\t{\n\t\t\t\ticonSrc: copyIcon,\n\t\t\t\talt: \"複製\",\n\t\t\t\tonClick: () => {}\n\t\t\t},\n\t\t\t{\n\t\t\t\ticonSrc: trashIcon,\n\t\t\t\talt: \"削除\",\n\t\t\t\tonClick: () => {}\n\t\t\t}\n\t\t];\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<ul className=\"setWorkSpaceMenu\" style={this.state.position}>\n\t\t\t\t{this.menus.map(menu => (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tkey={menu.alt}\n\t\t\t\t\t\talt={menu.alt}\n\t\t\t\t\t\ticonSrc={menu.iconSrc}\n\t\t\t\t\t\tonClick={menu.onClick}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nexport default SetWorkSpaceMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDrag } from \"react-dnd\";\n\nimport KensanConst from \"../KensanConst\";\n\nconst Item = ({ itemInfo, position, type, innerItemInfo }) => {\n\tconst [{ isDragging }, drag] = useDrag({\n\t\titem: {\n\t\t\ttype,\n\t\t\tinfo: itemInfo,\n\t\t\tinnerItemInfo\n\t\t},\n\t\tcollect: monitor => ({\n\t\t\tisDragging: !!monitor.isDragging(),\n\t\t})\n\t});\n\n\tconst extraStyle = {\n\t\topacity: isDragging ? 0.5 : 1,\n\t\ttop: position.y,\n\t\tleft: position.x\n\t};\n\tconst newStyle = Object.assign(extraStyle, itemInfo.style);\n\n\treturn (\n\t\t<section className=\"item\" style={newStyle} ref={drag}>\n\t\t\t<h2 className=\"item__name\">{itemInfo.name}</h2>\n\t\t</section>\n\t);\n};\n\nItem.propTypes = {\n\titemInfo: PropTypes.shape({\n\t\tname: PropTypes.string\n\t})\n};\n\nItem.defaultProps = {\n\tinnerItemInfo: {\n\t\tinnerItemId: -1,\n\t\tsetId: -1\n\t}\n};\n\nexport default Item;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDrop, useDrag } from \"react-dnd\";\n\nimport KensanConst from \"../KensanConst\";\nimport Item from \"./Item\";\n\nconst Set = ({ setInfo, onDrop, items, position, onInnerMove, onTransfer }) => {\n\tconst [{ isOver }, drop] = useDrop({\n\t\taccept: [KensanConst.ItemType.Item, KensanConst.ItemType.InnerItem],\n\t\tdrop: (item, monitor) => {\n\t\t\tconst droppedPosition = monitor.getSourceClientOffset();\n\t\t\tif (item.type === KensanConst.ItemType.Item) {\n\t\t\t\tonDrop(setInfo.set_id, item.info.item_id, droppedPosition);\n\t\t\t} else {\n\t\t\t\tif (item.innerItemInfo.setId === setInfo.set_id) {\n\t\t\t\t\tonInnerMove(\n\t\t\t\t\t\titem.innerItemInfo.setId,\n\t\t\t\t\t\titem.innerItemInfo.innerItemId,\n\t\t\t\t\t\tdroppedPosition\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// 落とされたinnerItemの所属IDが自分でなければ輸送とみなす\n\t\t\t\tonTransfer(setInfo.set_id, item.innerItemInfo, droppedPosition);\n\t\t\t}\n\t\t},\n\t\tcollect: monitor => ({\n\t\t\tisOver: !!monitor.isOver()\n\t\t})\n\t});\n\n\tconst [{ isDragging }, drag] = useDrag({\n\t\titem: { type: KensanConst.ItemType.Set, setInfo },\n\t\tcollect: monitor => ({\n\t\t\tisDragging: !!monitor.isDragging()\n\t\t})\n\t});\n\n\t// props, constructorから割り出される値を元に追加のスタイルを定義\n\tconst extraStyle = {\n\t\tbackgroundColor: isOver ? \"#FFEFFB\" : \"white\",\n\t\ttop: position.y,\n\t\tleft: position.x,\n\t\topacity: isDragging ? 0.5 : 1\n\t};\n\n\tconst newStyle = Object.assign(extraStyle, setInfo.style);\n\n\treturn (\n\t\t<section className=\"set\" style={newStyle} ref={drag}>\n\t\t\t<h2 className=\"set__name\" style={{ backgroundColor: setInfo.color }}>\n\t\t\t\t{setInfo.name}\n\t\t\t</h2>\n\t\t\t<ul className=\"set__itemList\" ref={drop}>\n\t\t\t\t{setInfo.containedItems.map((containedItem, index) => (\n\t\t\t\t\t<Item\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tinnerItemInfo={{\n\t\t\t\t\t\t\tinnerItemId: index,\n\t\t\t\t\t\t\tsetId: setInfo.set_id\n\t\t\t\t\t\t}}\n\t\t\t\t\t\titemInfo={items.find(\n\t\t\t\t\t\t\telement => element.item_id === containedItem.itemId\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tposition={containedItem.position}\n\t\t\t\t\t\ttype={KensanConst.ItemType.InnerItem}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</section>\n\t);\n};\n\nSet.propTypes = {\n\tsetInfo: PropTypes.shape({\n\t\tname: PropTypes.string\n\t}),\n\tposition: PropTypes.shape(),\n\titems: PropTypes.arrayOf(PropTypes.shape())\n};\n\nexport default Set;\n","import React, { Component } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport PropTypes from \"prop-types\";\n\nimport KensanConst from \"../KensanConst\";\nimport SetWorkSpaceMenu from \"./SetWorkSpaceMenu\";\nimport Set from \"./Set\";\n\nconst SetWorkSpace = ({\n\tsets,\n\tonDrop,\n\titems,\n\tonTrash,\n\tonInnerMove,\n\tonTransfer,\n\tonSetMove\n}) => {\n\tconst [{ isOver }, drop] = useDrop({\n\t\taccept: [KensanConst.ItemType.InnerItem, KensanConst.ItemType.Set],\n\t\tdrop: (item, monitor) => {\n\t\t\t// didDropがtrueの時は他のドロップターゲットにドロップした時\n\t\t\t// つまりWorkSpaceの子供のSetの上にドロップされている\n\t\t\tconst droppedPosition = monitor.getSourceClientOffset();\n\t\t\tswitch (item.type) {\n\t\t\t\tcase KensanConst.ItemType.InnerItem:\n\t\t\t\t\tif (!monitor.didDrop()) {\n\t\t\t\t\t\tonTrash(item.innerItemInfo.setId, item.innerItemInfo.innerItemId);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase KensanConst.ItemType.Set:\n\t\t\t\t\tonSetMove(item.setInfo.set_id, droppedPosition);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\tcollect: monitor => ({\n\t\t\tisOver: monitor.isOver({ shallow: true })\n\t\t})\n\t});\n\tconst style = {\n\t\tbackgroundColor: isOver ? \"#FFEFFB\" : \"white\"\n\t};\n\n\treturn (\n\t\t<div className=\"setWorkSpace\" style={style} ref={drop}>\n\t\t\t<SetWorkSpaceMenu />\n\t\t\t{sets.map(set => (\n\t\t\t\t<Set\n\t\t\t\t\tkey={set.set_id}\n\t\t\t\t\tsetInfo={set}\n\t\t\t\t\tonDrop={onDrop}\n\t\t\t\t\titems={items}\n\t\t\t\t\tposition={set.position}\n\t\t\t\t\tonInnerMove={onInnerMove}\n\t\t\t\t\tonTransfer={onTransfer}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nSetWorkSpace.propTypes = {\n\tsets: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tset_id: PropTypes.number.isRequired\n\t\t})\n\t).isRequired,\n\tonDrop: PropTypes.func.isRequired,\n\tonTrash: PropTypes.func.isRequired,\n\tonInnerMove: PropTypes.func.isRequired,\n\titems: PropTypes.arrayOf(PropTypes.shape()).isRequired\n};\n\nexport default SetWorkSpace;\n","import React, { Component } from \"react\";\n\nimport plusIcon from \"../../images/plus-icon.svg\";\nimport copyIcon from \"../../images/copy-icon.svg\";\nimport trashIcon from \"../../images/trash-icon.svg\";\n\nimport MenuItem from \"./MenuItem\";\n\nclass ItemWorkSpaceMenu extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t\tthis.menus = [\n\t\t\t{\n\t\t\t\ticonSrc: plusIcon,\n\t\t\t\talt: \"追加\",\n\t\t\t\tonClick: () => {}\n\t\t\t},\n\t\t\t{\n\t\t\t\ticonSrc: copyIcon,\n\t\t\t\talt: \"複製\",\n\t\t\t\tonClick: () => {}\n\t\t\t},\n\t\t\t{\n\t\t\t\ticonSrc: trashIcon,\n\t\t\t\talt: \"削除\",\n\t\t\t\tonClick: () => {}\n\t\t\t}\n\t\t];\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<ul className=\"itemWorkSpaceMenu\" style={this.state.position}>\n\t\t\t\t{this.menus.map(menu => (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tkey={menu.alt}\n\t\t\t\t\t\talt={menu.alt}\n\t\t\t\t\t\ticonSrc={menu.iconSrc}\n\t\t\t\t\t\tonClick={menu.onClick}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nexport default ItemWorkSpaceMenu;\n","import React, { Component } from \"react\";\n\nimport ItemWorkSpaceMenu from \"./ItemWorkSpaceMenu\";\nimport Item from \"./Item\";\n\nimport KensanConst from '../KensanConst';\n\nclass ItemWorkSpace extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\tconst { items } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"itemWorkSpace\">\n\t\t\t\t<ItemWorkSpaceMenu />\n\t\t\t\t<div className=\"itemContainer\">\n\t\t\t\t\t{items.map(item => (\n\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\tkey={item.item_id}\n\t\t\t\t\t\t\titemInfo={item}\n\t\t\t\t\t\t\tposition={item.position}\n\t\t\t\t\t\t\ttype={KensanConst.ItemType.Item}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ItemWorkSpace;\n","import React, { Component } from \"react\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\n\nimport KensanHeader from \"./KensanHeader\";\nimport SetWorkSpace from \"./SetWorkSpace\";\nimport ItemWorkSpace from \"./ItemWorkSpace\";\nimport KensanConst from \"../KensanConst\";\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\ta: 1,\n\t\t\tsets: [\n\t\t\t\t{\n\t\t\t\t\tset_id: 1,\n\t\t\t\t\tname: \"トレーニングA\",\n\t\t\t\t\tcolor: \"#F19F4D\",\n\t\t\t\t\tposition: {\n\t\t\t\t\t\tx: 50,\n\t\t\t\t\t\ty: 80\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tborder: \"3px solid #F19F4D\"\n\t\t\t\t\t},\n\t\t\t\t\tcontainedItems: []\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tset_id: 10,\n\t\t\t\t\tname: \"トレーニングB\",\n\t\t\t\t\tcolor: \"#8FE23C\",\n\t\t\t\t\tposition: {\n\t\t\t\t\t\tx: 350,\n\t\t\t\t\t\ty: 80\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tborder: \"3px solid #8FE23C\"\n\t\t\t\t\t},\n\t\t\t\t\tcontainedItems: []\n\t\t\t\t}\n\t\t\t],\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\titem_id: 1,\n\t\t\t\t\tname: \"腹筋ローラー\",\n\t\t\t\t\tcolor: \"#F271D8\",\n\t\t\t\t\tposition: {\n\t\t\t\t\t\tx: 20,\n\t\t\t\t\t\ty: 20\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tbackgroundColor: \"#F271D8\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\titem_id: 10,\n\t\t\t\t\tname: \"ベンチプレス\",\n\t\t\t\t\tcolor: \"#4DC4F1\",\n\t\t\t\t\tposition: {\n\t\t\t\t\t\tx: 200,\n\t\t\t\t\t\ty: 20\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tbackgroundColor: \"#4DC4F1\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n\tgetContainedItemId(setId, innerItemId) {\n\t\t// セットIDから操作があったセットを特定する\n\t\tconst set = this.getSetbyId(setId);\n\t\treturn set.containedItems[innerItemId].itemId;\n\t}\n\n\t//セットIDからセットを取得\n\tgetSetbyId(setId) {\n\t\tconst { sets } = this.state;\n\t\treturn sets.find(element => element.set_id === setId);\n\t}\n\n\t//SetのPositionがrelativeのときの座標を計算する\n\tgetRelativeSetPosition(absolutePosition) {\n\t\tconst relativePosition = {\n\t\t\tx: absolutePosition.x,\n\t\t\ty: absolutePosition.y - KensanConst.APP_HEADER_HEIGHT\n\t\t};\n\n\t\treturn relativePosition;\n\t}\n\n\t// 絶対座標ではウィンドウのリサイズに対応できない\n\t// 絶対座標から指定されたSETへの相対座標を算出する\n\tgetRelativePosition(setId, absolutePosition) {\n\t\t// セットIDから操作があったセットを特定する\n\t\tconst set = this.getSetbyId(setId);\n\t\t// position: relativeで表示する座標に変換する\n\t\tconst relativePosition = {\n\t\t\tx: absolutePosition.x - set.position.x,\n\t\t\ty: absolutePosition.y - set.position.y - KensanConst.SET_HEADER_HEIGHT\n\t\t};\n\t\treturn relativePosition;\n\t}\n\n\t// 指定されたsetIdの内部アイテムIDに対応する内部アイテムを削除する\n\tremoveItemFromSet(setId, innerItemId) {\n\t\tconsole.log({ setId, innerItemId });\n\t\tconst targetSet = this.getSetbyId(setId);\n\t\tconst newInnerItems = targetSet.containedItems.filter(\n\t\t\t(element, index) => index !== innerItemId\n\t\t);\n\t\ttargetSet.containedItems = newInnerItems;\n\t\tthis.forceUpdate();\n\t}\n\n\t// 指定されたsetIdの指定されたポジションにアイテムを追加する\n\taddItemToSet(setId, itemId, position) {\n\t\t// セットIDから操作があったセットを特定する\n\t\tconst droppedSet = this.getSetbyId(setId);\n\t\tconst droppedItemInfo = {\n\t\t\titemId,\n\t\t\tposition: this.getRelativePosition(setId, position)\n\t\t};\n\t\tdroppedSet.containedItems.push(droppedItemInfo);\n\t}\n\n\thandleSetMove(setId, droppedPosition) {\n\t\tconst movedSet = this.getSetbyId(setId);\n\t\tmovedSet.position = this.getRelativeSetPosition(droppedPosition);\n\t}\n\n\t// ドロップされたアイテムをセットに追加\n\thandleItemDrop(setId, itemId, droppedPosition) {\n\t\tthis.addItemToSet(setId, itemId, droppedPosition);\n\t}\n\n\t//　セット内のアイテムをセット内にドロップしたときの処理\n\thandleInnerMove(setId, innerItemId, droppedPosition) {\n\t\t// セットIDから操作があったセットを特定する\n\t\tconst droppedSet = this.getSetbyId(setId);\n\t\t//　内部アイテムIDから操作があったアイテムを特定する\n\t\tconst movedItem = droppedSet.containedItems.find(\n\t\t\t(_element, index) => index === innerItemId\n\t\t);\n\t\t// 内部アイテムの座標をドロップされた位置に変更する\n\t\tmovedItem.position = this.getRelativePosition(setId, droppedPosition);\n\t}\n\n\t// セット内アイテムを外にドロップしたときの処理\n\thandleItemTrash(setId, innerItemId) {\n\t\tthis.removeItemFromSet(setId, innerItemId);\n\t}\n\n\t// セット間のアイテムの移動\n\thandleItemTransfer(toSetId, innerItemInfo, droppedPosition) {\n\t\tconst transferedItemId = this.getContainedItemId(\n\t\t\tinnerItemInfo.setId,\n\t\t\tinnerItemInfo.innerItemId\n\t\t);\n\t\t//　輸送元から削除\n\t\tthis.removeItemFromSet(innerItemInfo.setId, innerItemInfo.innerItemId);\n\t\t//　輸送先に追加\n\t\tthis.addItemToSet(toSetId, transferedItemId, droppedPosition);\n\t}\n\n\trender() {\n\t\tconst { sets, items } = this.state;\n\n\t\treturn (\n\t\t\t<DndProvider backend={HTML5Backend}>\n\t\t\t\t<div className=\"kensanApp\">\n\t\t\t\t\t<KensanHeader />\n\t\t\t\t\t<SetWorkSpace\n\t\t\t\t\t\tsets={sets}\n\t\t\t\t\t\titems={items}\n\t\t\t\t\t\tonDrop={(setId, itemId, droppedPosition) => {\n\t\t\t\t\t\t\tthis.handleItemDrop(setId, itemId, droppedPosition);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonTrash={(setId, innerItemId) => {\n\t\t\t\t\t\t\tthis.handleItemTrash(setId, innerItemId);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonInnerMove={(setId, innerItemId, droppedPosition) => {\n\t\t\t\t\t\t\tthis.handleInnerMove(setId, innerItemId, droppedPosition);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonTransfer={(toSetId, innerItemInfo, droppedPosition) => {\n\t\t\t\t\t\t\tthis.handleItemTransfer(toSetId, innerItemInfo, droppedPosition);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonSetMove={(setId, droppedPosition) => {\n\t\t\t\t\t\t\tthis.handleSetMove(setId, droppedPosition);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<ItemWorkSpace items={items} />\n\t\t\t\t</div>\n\t\t\t</DndProvider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './js/components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}