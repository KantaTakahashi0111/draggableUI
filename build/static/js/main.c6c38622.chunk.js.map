{"version":3,"sources":["images/plus-icon.svg","images/copy-icon.svg","images/trash-icon.svg","images/menu-icon.svg","js/components/ProcessMenu.jsx","js/components/ProcessMenuBar.jsx","js/components/KensanHeader.jsx","js/components/MenuItem.jsx","js/components/SetWorkSpaceMenu.jsx","js/components/Set.jsx","js/components/SetWorkSpace.jsx","js/components/ItemWorkSpaceMenu.jsx","js/components/Item.jsx","js/components/ItemWorkSpace.jsx","js/components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","ProcessMenu","className","ProcessMenuBar","KensanHeader","src","menuIcon","alt","MenuItem","iconSrc","onClick","type","SetWorkSpaceMenu","props","state","position","top","left","menus","plusIcon","copyIcon","trashIcon","style","this","map","menu","Component","Set","setInfo","backgroundColor","color","name","SetWorkSpace","sets","border","set","ItemWorkSpaceMenu","Item","itemInfo","ItemWorkSpace","items","item","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,kBCA3CD,EAAOC,QAAU,IAA0B,uC,4LCe5BC,EAbK,kBAChB,yBAAKC,UAAU,eACX,wBAAIA,UAAU,qBACV,wBAAIA,UAAU,qBACV,4BAAQA,UAAU,uBAAlB,mCAEJ,wBAAIA,UAAU,qBACV,4BAAQA,UAAU,uBAAlB,sCCADC,EAPQ,kBACtB,wBAAID,UAAU,kBACb,wBAAIA,UAAU,sDACd,wBAAIA,UAAU,2BCeDE,EAdM,kBACjB,4BAAQF,UAAU,gBACd,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,uBACX,4BAAQA,UAAU,cACd,yBAAKG,IAAKC,IAAUC,IAAI,OAAOL,UAAU,wBAGjD,kBAAC,EAAD,OAEJ,kBAAC,EAAD,Q,gDCCOM,EAdE,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASF,EAAZ,EAAYA,IAAKG,EAAjB,EAAiBA,QAAjB,OAChB,wBAAIR,UAAU,YACb,4BAAQS,KAAK,SAAST,UAAU,mBAAmBQ,QAASA,GAC3D,yBAAKL,IAAKI,EAASF,IAAKA,EAAKL,UAAU,0BC4C3BU,E,YAzCd,WAAYC,GAAQ,IAAD,8BAClB,4CAAMA,KACDC,MAAQ,CACZC,SAAU,CACTC,IAAK,GACLC,KAAM,KAGR,EAAKC,MAAQ,CACZ,CACCT,QAASU,IACTZ,IAAK,eACLG,QAAS,cAEV,CACCD,QAASW,IACTb,IAAK,eACLG,QAAS,cAEV,CACCD,QAASY,IACTd,IAAK,eACLG,QAAS,eAtBO,E,sEA2BlB,OACC,wBAAIR,UAAU,mBAAmBoB,MAAOC,KAAKT,MAAMC,UACjDQ,KAAKL,MAAMM,KAAI,SAAAC,GAAI,OACnB,kBAAC,EAAD,CACClB,IAAKkB,EAAKlB,IACVE,QAASgB,EAAKhB,QACdC,QAASe,EAAKf,kB,GAlCWgB,aCUhBC,EAfH,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACX,6BAAS1B,UAAU,MAAMoB,MAAOM,EAAQN,OACvC,wBAAIpB,UAAU,YAAYoB,MAAO,CAAEO,gBAAiBD,EAAQE,QAC1DF,EAAQG,MAEV,wBAAI7B,UAAU,oBC4BD8B,E,YA9Bd,WAAYnB,GAAQ,IAAD,8BAClB,4CAAMA,KAEDC,MAAQ,CACZmB,KAAM,CACL,CACCF,KAAM,sBACND,MAAO,UACPR,MAAO,CACNN,IAAK,GACLC,KAAM,GACNiB,OAAQ,wBAXM,E,sEAmBlB,OACC,yBAAKhC,UAAU,gBACd,kBAAC,EAAD,MACCqB,KAAKT,MAAMmB,KAAKT,KAAI,SAAAW,GAAG,OACvB,kBAAC,EAAD,CAAKP,QAASO,Y,GAxBQT,aCwCZU,E,YApCd,WAAYvB,GAAQ,IAAD,8BAClB,4CAAMA,KACDC,MAAQ,GACb,EAAKI,MAAQ,CACZ,CACCT,QAASU,IACTZ,IAAK,eACLG,QAAS,cAEV,CACCD,QAASW,IACTb,IAAK,eACLG,QAAS,cAEV,CACCD,QAASY,IACTd,IAAK,eACLG,QAAS,eAjBO,E,sEAsBlB,OACC,wBAAIR,UAAU,oBAAoBoB,MAAOC,KAAKT,MAAMC,UAClDQ,KAAKL,MAAMM,KAAI,SAAAC,GAAI,OACnB,kBAAC,EAAD,CACClB,IAAKkB,EAAKlB,IACVE,QAASgB,EAAKhB,QACdC,QAASe,EAAKf,kB,GA7BYgB,aCOjBW,EAZF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACZ,6BAASpC,UAAU,OAAOoB,MAAOgB,EAAShB,OACzC,wBAAIpB,UAAU,cAAcoC,EAASP,QCiCxBQ,E,YAhCd,WAAY1B,GAAQ,IAAD,8BAClB,4CAAMA,KAEDC,MAAQ,CACZ0B,MAAO,CACN,CACCT,KAAM,iCACND,MAAO,UACPR,MAAO,CACNO,gBAAiB,UACjBb,IAAK,GACLC,KAAM,OAXQ,E,sEAmBlB,OACC,yBAAKf,UAAU,iBACd,kBAAC,EAAD,MACA,yBAAKA,UAAU,iBACbqB,KAAKT,MAAM0B,MAAMhB,KAAI,SAAAiB,GAAI,OACzB,kBAAC,EAAD,CAAMH,SAAUG,a,GAzBMf,aCabgB,E,iLAVb,OACC,yBAAKxC,UAAU,aACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANcwB,aCMEiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c6c38622.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus-icon.ab0afe9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/copy-icon.58bed3d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash-icon.2b32eb47.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu-icon.2f39056e.svg\";","import React from 'react';\n\nconst ProcessMenu = () => (\n    <div className=\"processMenu\">\n        <ul className=\"processMenu__list\">\n            <li className=\"processMenu__item\">\n                <button className=\"processMenu__button\">セット作成</button>\n            </li>\n            <li className=\"processMenu__item\">\n                <button className=\"processMenu__button\">セット配置</button>\n            </li>\n        </ul>\n    </div> \n);\n\nexport default ProcessMenu;","import React from \"react\";\n\nconst ProcessMenuBar = () => (\n\t<ul className=\"processMenuBar\">\n\t\t<li className=\"processMenuBar__item processMenuBar__item--active\"></li>\n\t\t<li className=\"processMenuBar__item\"></li>\n\t</ul>\n);\n\nexport default ProcessMenuBar;\n","import React from 'react';\nimport menuIcon from '../../images/menu-icon.svg';\n\nimport ProcessMenu from './ProcessMenu';\nimport ProcessMenuBar from './ProcessMenuBar';\n\nconst KensanHeader = () => (\n    <header className=\"kensanHeader\">\n        <div className=\"kensanHeader__buttonArea\">\n            <div className=\"menuButtonContainer\">\n                <button className=\"menuButton\">\n                    <img src={menuIcon} alt=\"menu\" className=\"menuButton__image\"/>\n                </button>\n            </div>\n            <ProcessMenu />\n        </div>\n        <ProcessMenuBar />\n    </header>\n);\n\nexport default KensanHeader;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst MenuItem = ({ iconSrc, alt, onClick }) => (\n\t<li className=\"menuItem\">\n\t\t<button type=\"button\" className=\"menuItem__button\" onClick={onClick}>\n\t\t\t<img src={iconSrc} alt={alt} className=\"worSpaceMenu__icon\" />\n\t\t</button>\n\t</li>\n);\n\nMenuItem.propTypes = {\n\ticonSrc: PropTypes.string,\n\talt: PropTypes.string,\n\tonCLick: PropTypes.func\n};\n\nexport default MenuItem;\n","import React, { Component } from \"react\";\n\nimport plusIcon from \"../../images/plus-icon.svg\";\nimport copyIcon from \"../../images/copy-icon.svg\";\nimport trashIcon from \"../../images/trash-icon.svg\";\n\nimport MenuItem from \"./MenuItem\";\n\nclass SetWorkSpaceMenu extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tposition: {\n\t\t\t\ttop: 15,\n\t\t\t\tleft: 15\n\t\t\t}\n\t\t};\n\t\tthis.menus = [\n\t\t\t{\n\t\t\t\ticonSrc: plusIcon,\n\t\t\t\talt: \"追加\",\n\t\t\t\tonClick: () => {}\n\t\t\t},\n\t\t\t{\n\t\t\t\ticonSrc: copyIcon,\n\t\t\t\talt: \"複製\",\n\t\t\t\tonClick: () => {}\n\t\t\t},\n\t\t\t{\n\t\t\t\ticonSrc: trashIcon,\n\t\t\t\talt: \"削除\",\n\t\t\t\tonClick: () => {}\n\t\t\t}\n\t\t];\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<ul className=\"setWorkSpaceMenu\" style={this.state.position}>\n\t\t\t\t{this.menus.map(menu => (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\talt={menu.alt}\n\t\t\t\t\t\ticonSrc={menu.iconSrc}\n\t\t\t\t\t\tonClick={menu.onClick}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nexport default SetWorkSpaceMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Set = ({ setInfo }) => (\n\t<section className=\"set\" style={setInfo.style}>\n\t\t<h2 className=\"set__name\" style={{ backgroundColor: setInfo.color }}>\n\t\t\t{setInfo.name}\n\t\t</h2>\n\t\t<ul className=\"set__itemList\"></ul>\n\t</section>\n);\n\nSet.propTypes = {\n\tsetInfo: PropTypes.shape({\n\t\tname: PropTypes.string\n\t})\n};\n\nexport default Set;\n","import React, { Component } from \"react\";\n\nimport SetWorkSpaceMenu from \"./SetWorkSpaceMenu\";\nimport Set from \"./Set\";\n\nclass SetWorkSpace extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tsets: [\n\t\t\t\t{\n\t\t\t\t\tname: \"セットA\",\n\t\t\t\t\tcolor: \"#F271D8\",\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\ttop: 80,\n\t\t\t\t\t\tleft: 50,\n\t\t\t\t\t\tborder: \"3px solid #F271D8\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"setWorkSpace\">\n\t\t\t\t<SetWorkSpaceMenu />\n\t\t\t\t{this.state.sets.map(set => (\n\t\t\t\t\t<Set setInfo={set} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SetWorkSpace;\n","import React, { Component } from \"react\";\n\nimport plusIcon from \"../../images/plus-icon.svg\";\nimport copyIcon from \"../../images/copy-icon.svg\";\nimport trashIcon from \"../../images/trash-icon.svg\";\n\nimport MenuItem from \"./MenuItem\";\n\nclass ItemWorkSpaceMenu extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t\tthis.menus = [\n\t\t\t{\n\t\t\t\ticonSrc: plusIcon,\n\t\t\t\talt: \"追加\",\n\t\t\t\tonClick: () => {}\n\t\t\t},\n\t\t\t{\n\t\t\t\ticonSrc: copyIcon,\n\t\t\t\talt: \"複製\",\n\t\t\t\tonClick: () => {}\n\t\t\t},\n\t\t\t{\n\t\t\t\ticonSrc: trashIcon,\n\t\t\t\talt: \"削除\",\n\t\t\t\tonClick: () => {}\n\t\t\t}\n\t\t];\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<ul className=\"itemWorkSpaceMenu\" style={this.state.position}>\n\t\t\t\t{this.menus.map(menu => (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\talt={menu.alt}\n\t\t\t\t\t\ticonSrc={menu.iconSrc}\n\t\t\t\t\t\tonClick={menu.onClick}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nexport default ItemWorkSpaceMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Item = ({ itemInfo }) => (\n\t<section className=\"item\" style={itemInfo.style}>\n\t\t<h2 className=\"item__name\">{itemInfo.name}</h2>\n\t</section>\n);\n\nItem.propTypes = {\n\titemInfo: PropTypes.shape({\n\t\tname: PropTypes.string\n\t})\n};\n\nexport default Item;\n","import React, { Component } from \"react\";\n\nimport ItemWorkSpaceMenu from \"./ItemWorkSpaceMenu\";\nimport Item from \"./Item\";\n\nclass ItemWorkSpace extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tname: \"アイテム１\",\n\t\t\t\t\tcolor: \"#F271D8\",\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tbackgroundColor: \"#F271D8\",\n\t\t\t\t\t\ttop: 20,\n\t\t\t\t\t\tleft: 20\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"itemWorkSpace\">\n\t\t\t\t<ItemWorkSpaceMenu />\n\t\t\t\t<div className=\"itemContainer\">\n\t\t\t\t\t{this.state.items.map(item => (\n\t\t\t\t\t\t<Item itemInfo={item} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ItemWorkSpace;\n","import React, { Component } from \"react\";\n\nimport KensanHeader from \"./KensanHeader\";\nimport SetWorkSpace from \"./SetWorkSpace\";\nimport ItemWorkSpace from \"./ItemWorkSpace\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"kensanApp\">\n\t\t\t\t<KensanHeader />\n\t\t\t\t<SetWorkSpace />\n\t\t\t\t<ItemWorkSpace />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './js/components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}